// Generated by view binder compiler. Do not edit!
package com.example.poppylove.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.poppylove.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView HaveAccount;

  @NonNull
  public final EditText PassID;

  @NonNull
  public final EditText PhoneID;

  @NonNull
  public final ImageView RegsImg;

  @NonNull
  public final Button ResBID;

  @NonNull
  public final TextView Rid;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull TextView HaveAccount,
      @NonNull EditText PassID, @NonNull EditText PhoneID, @NonNull ImageView RegsImg,
      @NonNull Button ResBID, @NonNull TextView Rid) {
    this.rootView = rootView;
    this.HaveAccount = HaveAccount;
    this.PassID = PassID;
    this.PhoneID = PhoneID;
    this.RegsImg = RegsImg;
    this.ResBID = ResBID;
    this.Rid = Rid;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.HaveAccount;
      TextView HaveAccount = ViewBindings.findChildViewById(rootView, id);
      if (HaveAccount == null) {
        break missingId;
      }

      id = R.id.PassID;
      EditText PassID = ViewBindings.findChildViewById(rootView, id);
      if (PassID == null) {
        break missingId;
      }

      id = R.id.PhoneID;
      EditText PhoneID = ViewBindings.findChildViewById(rootView, id);
      if (PhoneID == null) {
        break missingId;
      }

      id = R.id.RegsImg;
      ImageView RegsImg = ViewBindings.findChildViewById(rootView, id);
      if (RegsImg == null) {
        break missingId;
      }

      id = R.id.ResBID;
      Button ResBID = ViewBindings.findChildViewById(rootView, id);
      if (ResBID == null) {
        break missingId;
      }

      id = R.id.Rid;
      TextView Rid = ViewBindings.findChildViewById(rootView, id);
      if (Rid == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, HaveAccount, PassID, PhoneID,
          RegsImg, ResBID, Rid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
